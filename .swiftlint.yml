disabled_rules: # rule identifiers to exclude from running
  - control_statement
  - trailing_whitespace
  - class_delegate_protocol
  - weak_delegate
  - unused_closure_parameter
opt_in_rules: # some rules are only opt-in
  - empty_count
  - multiline_parameters
  - function_parameter_count
  - conditional_returns_on_newline
  # Find all the available rules by running:
  # swiftlint rules
included: # paths to include during linting. `--path` is ignored if present.
  -
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Tests/LinuxMain.swift
  - Package.swift
  - Pods

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: error # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 
  warning: 250
  error: 300
# they can set both implicitly with an array
type_body_length:
  - 250 # warning
  - 300 # error
# or they can set both explicitly
file_length:
  warning: 300
  error: 300
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: # excluded via string
    - iPhone
    - T
    - U
identifier_name:
  min_length: # only min_length
    error: 4 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
    - frame
    - rect
    - model
    - row
    - hud
    - key
    - url
    - day
    - pin
    - map
    - red
    - tag
    - lhs
    - rhs
    - nib
    - rx
    - brl
    - inr
    - myr
    - php
    - ext
    - vc

multiline_parameters: warning
function_parameter_count : 
    warning: 5
    error: 6

reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji)
